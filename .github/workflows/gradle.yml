# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'oracle'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        
    - name: Copy JAR file to remote server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DMZ }}
        username: ${{ secrets.DMZ_USER }}
        key: ${{ secrets.DMZ_KEY }}
        port: ${{ secrets.DMZ_PORT }}
        source: "./build/libs/demo-0.0.1-SNAPSHOT.jar"
        target: "~/app/"
      
    
    - name: SSH into remote server and execute deploy.sh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DMZ }}
        username: ${{ secrets.DMZ_USER }}
        key: ${{ secrets.DMZ_KEY }}
        port: ${{ secrets.DMZ_PORT }}
        script_stop: true
        script: sh /home/taewan2002/app/deploy.sh
